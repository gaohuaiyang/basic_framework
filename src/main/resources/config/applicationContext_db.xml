<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 				http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
 				http://www.springframework.org/schema/aop
 				http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
 				http://www.springframework.org/schema/context
 				http://www.springframework.org/schema/context/spring-context-4.2.xsd
 				http://www.springframework.org/schema/tx
 				http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
 				http://www.springframework.org/schema/mvc
     			http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- 资源文件加载 -->
	<!-- <bean id="jdbc_placeholderConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations" >
		<list>
		<value>classpath:config/jdbc.properties</value>
		<value>file:${HOME}/hfmo.jdbc.property</value>
		</list>
		</property> 
	</bean>  -->
	<context:property-placeholder location="classpath:config/jdbc.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxTotal" value="${jdbc.maxTotal}"></property>
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<property name="maxWaitMillis" value="${jdbc.maxWaitMillis}"></property>
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<property name="validationQuery" value="${jdbc.validationQuery}"></property>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"></property>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"></property>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"></property>
	</bean>
	
	<!-- 注解配置事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- myBatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	    <property name="typeAliasesPackage" value="com.pptv.model" />
		<property name="mapperLocations" value="classpath:com/pptv/*/dao/*.xml" />
		<property name="configLocation" value="classpath:config/myBatisConfig.xml" />
	</bean>
	
	<!-- myBatis 自动扫描包的方式来注册各种 Mapper，自动创建 MapperFactoryBean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pptv" />
		<property name="annotationClass" value="com.pptv.common.annotation.MyBatisRepository" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
</beans>